name: Haskell Workflow

on:
  # Runs on pushes targeting the default branch
  pull_request:
  push:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest
# queued. However, do NOT cancel in-progress runs as we want to allow these production deployments
# to complete.
concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up HLint
        uses: haskell/actions/hlint-setup@v2
        with:
          version: 3.6.1

      - name: Run HLint
        uses: haskell/actions/hlint-run@v2
        with:
          path: .
          fail-on: warning

  build:
    name: Build
    runs-on: ubuntu-latest

    outputs:
      cache-setup: ${{ steps.cache-keys.outputs.cache-setup }}
      cache-packages: ${{ steps.cache-keys.outputs.cache-packages }}
      cache-index: ${{ steps.cache-keys.outputs.cache-index }}
      cache-work: ${{ steps.cache-keys.outputs.cache-work }}

    steps:
      - uses: actions/checkout@v3

      - name: Install Haskell
        uses: haskell/actions/setup@v2
        with:
          enable-stack: true
          stack-setup-ghc: true
          stack-version: latest
          ghc-version: latest

      - name: Generate Cache Keys
        id: cache-keys
        shell: sh
        run: |
          CACHE_SETUP=${{ runner.os }}-stack-setup-${{ hashFiles('stack.yaml') }}-${{ hashFiles('package.yaml') }}
          echo "cache-setup=$CACHE_SETUP" >> $GITHUB_OUTPUT
          CACHE_PACKAGES=${{ runner.os }}-stack-packages-${{ hashFiles('stack.yaml') }}-${{ hashFiles('package.yaml') }}
          echo "cache-packages=$CACHE_PACKAGES" >> $GITHUB_OUTPUT
          CACHE_INDEX=${{ runner.os }}-stack-index-${{ hashFiles('stack.yaml') }}-${{ hashFiles('package.yaml') }}
          echo "cache-index=$CACHE_INDEX" >> $GITHUB_OUTPUT
          CACHE_WORK=${{ runner.os }}-stack-work-${{ hashFiles('package.yaml') }}-${{ hashFiles('**/*.hs') }}
          echo "cache-work=$CACHE_WORK" >> $GITHUB_OUTPUT

      - name: Cache Stack Setup
        uses: actions/cache@v3
        with:
          key: ${{ steps.cache-keys.outputs.cache-setup }}
          restore-keys: |
            ${{ runner.os }}-stack-setup-${{ hashFiles('stack.yaml') }}-
            ${{ runner.os }}-stack-setup-
            ${{ runner.os }}-stack-packages-
            ${{ runner.os }}-stack-
            ${{ runner.os }}-
          path: |
            ~/.stack/*
            !~/.stack/pantry
            ~/.cabal
            *.cabal
            cabal.*

      - name: Cache Stack Packages Database
        uses: actions/cache@v3
        with:
          key: ${{ steps.cache-keys.outputs.cache-packages }}
          restore-keys: |
            ${{ runner.os }}-stack-packages-${{ hashFiles('stack.yaml') }}-
            ${{ runner.os }}-stack-packages-
            ${{ runner.os }}-stack-setup-
            ${{ runner.os }}-stack-
            ${{ runner.os }}-
          path: |
            ~/.stack/pantry/*
            !~/.stack/pantry/hackage

      - name: Cache Stack Packages Index
        uses: actions/cache@v3
        with:
          key: ${{ steps.cache-keys.outputs.cache-packages }}
          restore-keys: |
            ${{ runner.os }}-stack-packages-${{ hashFiles('stack.yaml') }}-
            ${{ runner.os }}-stack-packages-
            ${{ runner.os }}-stack-setup-
            ${{ runner.os }}-stack-
            ${{ runner.os }}-
          path: |
            ~/.stack/pantry/hackage

      - name: Cache Stack Work Directory
        uses: actions/cache@v3
        with:
          key: ${{ steps.cache-keys.outputs.cache-work }}
          restore-keys: |
            ${{ runner.os }}-stack-work-${{ hashFiles('package.yaml') }}-
            ${{ runner.os }}-stack-work-
            ${{ runner.os }}-stack-setup-
            ${{ runner.os }}-stack-
            ${{ runner.os }}-
          path: |
            dist-newstyle
            .stack-work
            *.cabal
            cabal.*

      - name: Generate Cabal File
        shell: sh
        run: |
          stack build --dry-run

      - name: Update Package List
        shell: sh
        run: |
          stack update

      - name: Install Dependencies
        shell: sh
        run: |
          stack build --only-dependencies --no-run-benchmarks --no-run-tests

      - name: Build Haskell Sources
        shell: sh
        run: |
          stack build --no-run-benchmarks --no-run-tests

  test:
    name: Test
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install Haskell
        uses: haskell/actions/setup@v2
        with:
          enable-stack: true
          stack-setup-ghc: true
          stack-version: latest
          ghc-version: latest

      - name: Restore Cache Stack Setup
        uses: actions/cache/restore@v3
        with:
          key: ${{ needs.build.outputs.cache-setup }}
          fail-on-cache-miss: true
          path: |
            ~/.stack/*
            !~/.stack/pantry
            ~/.cabal
            *.cabal
            cabal.*

      - name: Restore Cache Stack Packages Database
        uses: actions/cache/restore@v3
        with:
          key: ${{ needs.build.outputs.cache-packages }}
          fail-on-cache-miss: true
          path: |
            ~/.stack/pantry/*
            !~/.stack/pantry/hackage

      - name: Restore Cache Stack Packages Index
        uses: actions/cache/restore@v3
        with:
          key: ${{ needs.build.outputs.cache-packages }}
          fail-on-cache-miss: true
          path: |
            ~/.stack/pantry/hackage

      - name: Restore Cache Stack Work Directory
        uses: actions/cache/restore@v3
        with:
          key: ${{ needs.build.outputs.cache-work }}
          fail-on-cache-miss: true
          path: |
            dist-newstyle
            .stack-work
            *.cabal
            cabal.*

      - name: Run Tests
        run: |
          stack test --no-run-benchmarks

  docs:
    name: Update Documentation
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - uses: actions/checkout@v3

      - name: Restore Cabal-Dist Cache
        uses: actions/cache@v3
        with:
          key: ${{ needs.build.outputs.cache-dist }}
          fail-on-cache-miss: true
          path: |
            dist-newstyle
            .stack-work
            *.cabal
            cabal.*

      - uses: actions/configure-pages@v3
      - uses: actions/upload-pages-artifact@v2
        with:
          path: ${{ needs.build.outputs.html-dir }}

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
